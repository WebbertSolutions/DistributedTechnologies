<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      globalThreshold="Trace"
      throwExceptions="false">

  <!-- enable asp.net core layout renderers -->
  <extensions>
    <add assembly="NLog.Web.AspNetCore"/>
  </extensions>

  <variable name="logsDir" value="${baseDir}..\..\..\..\Logs" />
  <variable name="productName" value="MyLogging" />
  
  <!-- the targets to write to -->
  <targets>
    <!-- File Target for all log messages with basic details -->
    <target 
      xsi:type="File" 
      name="allfile" 
      fileName="${logsDir}\${productName}\Unstructured.txt"
      archiveFileName="${logsDir}\${productName}\Old\Unstructured_{#}.txt"
      archiveEvery="Day"
      maxArchiveFiles="6"
      archiveNumbering="Rolling"
      layout="${longdate}|${event-properties:item=EventId_Id:whenEmpty=0}|${level:uppercase=true}|${logger}|${message} ${exception:format=tostring}" 
      />

    <target
      xsi:type="File"
      name="allfile2"
      fileName="${logsDir}\${productName}\Structured.txt"
      archiveFileName="${logsDir}\${productName}\Old\Structured_{#}.txt"
      archiveEvery="Day"
      maxArchiveFiles="6"
      archiveNumbering="Rolling">
      <layout type="JsonLayout" includeAllProperties="true">
        <attribute name="timestamp" layout="${date:universalTime=true:format=yyyy-MM-dd HH\:mm\:ss}" />
        <attribute name="level" layout="${level}"/>
        <attribute name="message" layout="${message:raw=true}" />
        <attribute name="exception" layout="${onexception:inner=${newline}${newline}${exception:format=ToString}}" />
      </layout>
    </target>
    
    <!-- File Target for own log messages with extra web details using some ASP.NET core renderers -->
    <target 
      xsi:type="File" 
      name="ownFile-web" 
      fileName="${logsDir}\${productName}\nlog-AspNetCore-own-${shortdate}.log"
      layout="${longdate}|${event-properties:item=EventId_Id:whenEmpty=0}|${level:uppercase=true}|${logger}|${message} ${exception:format=tostring}|url: ${aspnet-request-url}|action: ${aspnet-mvc-action}|${callsite}" />

    <!--Console Target for hosting lifetime messages to improve Docker / Visual Studio startup detection -->
    <target xsi:type="Console" name="lifetimeConsole" layout="${MicrosoftConsoleLayout}" />
  </targets>

  <!-- rules to map from logger name to target -->
  <rules>
    <!--All logs, including from Microsoft-->
    <logger name="*" minlevel="Trace" writeTo="allfile" />
    <logger name="*" minlevel="Trace" writeTo="allfile2" />

    <!--Output hosting lifetime messages to console target for faster startup detection -->
    <logger name="Microsoft.Hosting.Lifetime" minlevel="Info" writeTo="lifetimeConsole, ownFile-web" final="true" />

    <!--Skip non-critical Microsoft logs and so log only own logs (BlackHole) -->
    <logger name="Microsoft.*" maxlevel="Info" final="true" />
    <logger name="System.Net.Http.*" maxlevel="Info" final="true" />

    <logger name="*" minlevel="Trace" writeTo="ownFile-web" />
  </rules>
</nlog>